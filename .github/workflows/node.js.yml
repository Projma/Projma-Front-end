# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

#   runs-on: windows-latest
    runs-on: ubuntu-latest

#    strategy:
#      matrix:
#        node-version: [14.x, 16.x, 18.x]
#        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
#    - name: Use Node.js ${{ matrix.node-version }}
#    - name: Use Node.js 16
    - name: Use Node.js 14.x # 14.17.4
      uses: actions/setup-node@v3
      with:
#        node-version: ${{ matrix.node-version }}
        node-version: 14.x
        cache: 'npm'
    # - name: Upgrade NPM
    #   run: npm install -g npm
    - run: npm i fsevents@latest -f --save-optional
    - name: Install dependencies
      # run: npm ci
      run: npm install --force
    - name: Build project
      run: CI=false npm run build --if-present
      # CI=false (treating warnings as errors because process.env.ci = true.)
#     - name: Test project
#     - run: npm test

  publish:

    needs: build
    
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # tags: farzanrahmani/projmafrontend:$(date +%s)
          tags: farzanrahmani/projmafrontend:latest

  # deploy:

  #   needs: publish
    
  #   runs-on: ubuntu-latest

  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v3
  #     -
  #       name: Set up on server
  #       script:
  #         - ssh -o StrictHostKeyChecking=no -i "${{ secrets.SSH_KEY }}" ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
  #           # docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} && 
  #           sudo docker ps -q | xargs sudo docker stop | xargs sudo docker rm &&
  #           sudo docker pull  farzanrahmani/projmafrontend:latest &&
  #           sudo docker run -d -p 80:80 farzanrahmani/projmafrontend:latest"
  #       # run: |
  #       #   ssh -o StrictHostKeyChecking=no -i "${{ secrets.SSH_KEY }}" ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd /home/${{ secrets.SERVER_USER }}/projma-frontend && git pull && docker-compose up -d --build"
  #       #   # ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd /home/${{ secrets.SERVER_USER }}/projma-frontend && git pull && docker-compose up -d --build"

